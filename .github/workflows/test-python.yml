name: Python tests

on:
  push:
    branches: [ main, ci-automation, new-languages ]
  pull_request:
    branches: [ main ]

jobs:
  python:
    name: Python tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11']
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # install python package deps using poetry inside the package dir
          if [ -f python-package/pyproject.toml ]; then python -m pip install poetry && (cd python-package && poetry install --no-interaction); fi
          if [ -f flask-app/requirements.txt ]; then pip install -r flask-app/requirements.txt; fi
          if [ -f fastapi/requirements.txt ]; then pip install -r fastapi/requirements.txt; fi
      - name: Run tests
        run: |
          # Run tests inside the poetry-created virtualenv so pytest is available
          if [ -f python-package/pyproject.toml ]; then \
            (cd python-package && poetry run pytest -q); \
          else \
            PYTHONPATH=python-package/src pytest -q; \
          fi